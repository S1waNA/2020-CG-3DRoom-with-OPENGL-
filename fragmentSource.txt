#version 330 core
//in vec4 vertexColor;			

in vec3 FragPos;
in vec3 Normal;

in vec2 TexCoord;	
uniform sampler2D ourTexture;
uniform vec3 ambientColor;
uniform vec3 lightPos;
uniform vec3 lightColor;
uniform vec3 cameraPos;

out vec4 FragColor;			

void main(){	
	vec3 lightDir = normalize(lightPos - FragPos);
	vec3 reflectVec = reflect(-lightDir,Normal);
	vec3 cameraVec = normalize(cameraPos - FragPos);
	float specularAmount = pow (max(dot(reflectVec,cameraVec),0),12);
	vec3 specular = specularAmount * lightColor * 0.02;
	vec3 diffuse = max(dot(lightDir, Normal), 0) * lightColor;

	FragColor = vec4( (ambientColor + diffuse +specular ) * texture(ourTexture,TexCoord).xyz , 1.0);
}
